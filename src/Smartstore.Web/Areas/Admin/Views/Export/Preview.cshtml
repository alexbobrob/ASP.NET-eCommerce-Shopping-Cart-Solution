@model ExportPreviewModel

@{
    var gridViewData = new ViewDataDictionary(ViewData);
    gridViewData["Parent"] = Model;

	ViewBag.Title = T("Common.Export") + " - " + T("Admin.Common.Preview");
}

<div class="section-header">
	<div class="title">
        <img src="@Url.Content(Model.ThumbnailUrl)" />
        <span>@ViewBag.Title - @Model.Name</span>
        <a asp-action="Edit" asp-route-id="@Model.Id">(@T("Common.Back"))</a>
	</div>
	<div class="options">
		<form id="ProfileExportForm" asp-action="Execute" method="post">
			<input type="hidden" asp-for="Id" />
			<input type="hidden" name="SelectedIds" value="" />
            @if (Model.LogFileExists)
            {
                <a asp-action="DownloadLogFile" asp-route-id="@Model.Id" class="btn btn-secondary" target="LogFile">
                    <i class="far fa-file-alt"></i>
                    <span>@T("Admin.Configuration.ActivityLog")</span>
                </a>
            }
		</form>
	</div>
</div>

<div class="preview-grid-container">
	@if (Model.EntityType == ExportEntityType.Product)
	{
		<partial name="_Grid.Preview.Products" model="null" view-data="gridViewData" />
	}
	else if (Model.EntityType == ExportEntityType.Order)
	{
		<partial name="_Grid.Preview.Orders" model="null" view-data="gridViewData" />
	}
	else if (Model.EntityType == ExportEntityType.Category)
	{
	}
	else if (Model.EntityType == ExportEntityType.Manufacturer)
	{
	}
	else if (Model.EntityType == ExportEntityType.Customer)
	{
	}
	else if (Model.EntityType == ExportEntityType.NewsLetterSubscription)
	{
	}
	else if (Model.EntityType == ExportEntityType.ShoppingCartItem)
	{		
	}
	else
	{
		<div class="alert alert-warning">
			@T("Admin.DataExchange.Export.NoPreview")
		</div>
	}
</div>

<script sm-target-zone="scripts" data-origin="ExportPreview">
	$(function() {
		// Execute export.
		$('#ExportAll, #ExportSelected').on('click', function (e) {
			e.preventDefault();
			var form = $('#ProfileExportForm');
			var exportAll = $(this).attr('id') === 'ExportAll';

			if (!exportAll && selectedIds.length === 0) {
				displayNotification(@T("Admin.Common.NoEntriesSelected").JsValue, 'warning');
				return false;
			}

			// TODO: (mg) (core) find out how to get the selected entity IDs.
			form.find('[name=SelectedIds]').val(exportAll ? '' : selectedIds.join(','));
			form.submit();
			return false;
		});
	});
</script>