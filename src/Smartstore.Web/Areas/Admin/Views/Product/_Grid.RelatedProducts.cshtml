@model ProductModel.RelatedProductModel

@{
    var parentModel = ViewData["Parent"] as ProductModel;
}

<datagrid id="relatedproducts-grid"
          allow-resize="true"
          allow-row-selection="true"
          allow-edit="true">
    <datasource read="@Url.Action("RelatedProductList", new { productId = parentModel.Id })"
                delete="@Url.Action("RelatedProductDelete")"
                update="@Url.Action("RelatedProductUpdate")" />
    <toolbar>
        <toolbar-group>
            <button id="pick-related-products" type="button" class="btn btn-primary btn-flat no-anims">
                <i class="fa fa-plus"></i>
                <span>@T("Common.AddNew")</span>
            </button>
            <button type="button"
                    id="btnCreateMutuallyRelatedProducts"
                    data-url="@Url.Action("CreateAllMutuallyRelatedProducts", new { productId = parentModel.Id })"
                    data-ask="@T("Admin.Common.AskCreateMutuallyAssociations")"
                    class="btn btn-light btn-flat">
                <i class="fa fa-random"></i>
                <span>@T("Admin.Common.CreateMutuallyAssociations")</span>
            </button>
            <button datagrid-action="DataGridToolAction.SaveChanges" type="button" class="btn btn-warning no-anims btn-flat">
                <i class="fa fa-check"></i>
                <span>@T("Admin.Common.SaveChanges")</span>
            </button>
            <button datagrid-action="DataGridToolAction.CancelEdit" type="button" class="btn btn-light btn-flat mr-auto">
                <span>@T("Common.Cancel")</span>
            </button>
        </toolbar-group>
        <toolbar-group class="omega">
            <button datagrid-action="DataGridToolAction.DeleteSelectedRows" type="button" class="btn btn-danger no-anims btn-flat">
                <i class="far fa-trash-alt"></i>
                <span>@T("Admin.Common.Delete.Selected")</span>
            </button>
        </toolbar-group>
    </toolbar>
    <columns>
        <column for="Product2Name" hideable="false" width="4fr" readonly>
            <display-template>
                @Html.LabeledProductName()
            </display-template>
        </column>
        <column for="Product2Sku" width="2fr" readonly />
        <column for="Product2Published" halign="center" width="1fr" readonly />
        <column for="DisplayOrder" halign="center" width="1fr" />
    </columns>
    <row-commands>
        <a datarow-action="DataRowAction.InlineEdit">@T("Common.Edit")</a>
        <div class="dropdown-divider"></div>
        <a datarow-action="DataRowAction.Delete">@T("Common.Delete")</a>
    </row-commands>
</datagrid>

<entity-picker icon-css-class="fa fa-plus"
               caption='@T("Admin.Common.Search")'
               dialog-title='@T("Admin.Catalog.ProductsRelatedProducts.AddNew")'
               onselectioncompleted="PickRelatedProducts_Completed"
               class="related-product-picker"
               style="display:none" />

<script sm-target-zone="Scripts" data-origin="grid-related-products">
    var token = "";

    $(function () {
        token = $('input[name="__RequestVerificationToken"]').val();

        // Call hidden entity picker.
        $(document).on("click", "#pick-related-products", function (e) {
            $(".related-product-picker").trigger("click");
            return false;
        });

        // Mutually create related products.
        $(document).on("click", "#btnCreateMutuallyRelatedProducts", function () {
            $(this).doAjax({
                data: { "__RequestVerificationToken": token },
                callbackSuccess: function (resp) {
                    alert(resp.Message);
                }
            });
        });
    });

    function PickRelatedProducts_Completed(ids) {
        $({}).doAjax({
            type: 'POST',
            url: '@Url.Action("RelatedProductAdd")',
            data: {
                "productId": @parentModel.Id,
                "selectedProductIds": ids,
                "__RequestVerificationToken": token
            },
            callbackSuccess: function () {
                window["relatedproducts-grid"].$children[0].read();
            }
        });
        return true;
    };
</script>