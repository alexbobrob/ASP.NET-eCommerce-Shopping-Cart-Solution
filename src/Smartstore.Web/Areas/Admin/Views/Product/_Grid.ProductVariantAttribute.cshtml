@model ProductModel.ProductVariantAttributeModel

@{
    var parentModel = ViewData["Parent"] as ProductModel;
}

<script sm-target-zone="Scripts" data-origin="grid-product-variant-attribute">

    /*TODO: (mh) (core) Implement option sets correctly */
    function onProductVariantAttributeEdit(e) {
        if (e.mode == "edit") {
            $('#AttributeControlType')
                .data('select-selected-id', e.dataItem['AttributeControlTypeId'])
                .data('select-init-text', e.dataItem['AttributeControlType'])
                .val(e.dataItem['AttributeControlTypeId'])
                .trigger('change');

            $('#ProductAttribute')
                .data('select-selected-id', e.dataItem['ProductAttributeId'])
                .data('select-init-text', e.dataItem['ProductAttribute'])
                .val(e.dataItem['ProductAttributeId'])
                .trigger('change');
        }

        var id = parseInt(e.dataItem['Id']);

        if (id === 0) {
            $(e.form).find('#IsRequired').prop('checked', true);
        }
        else {
            var optionsSetsChoice = $('#OptionsSetsContainer' + id);

            if (optionsSetsChoice.find('option').length > 0) {
                $('#EditOptionsLink' + id).hide();
                optionsSetsChoice.show();
                $('#OptionsSetsChoice' + id).selectWrapper();
            }
        }
    }

    function onProductVariantAttributeRowDataBound(e) {
        var id = parseInt(e.dataItem['Id']);

        $('#EditOptionsLink' + id).show();
        $('#OptionsSetsContainer' + id).hide();
    }
</script>

<datagrid id="productvariantattributes-grid"
          allow-resize="true"
          allow-row-selection="true"
          allow-edit="true">
    <datasource read="@Url.Action("ProductVariantAttributeList", new { productId = parentModel.Id })"
                delete="@Url.Action("ProductVariantAttributeDelete")"
                update="@Url.Action("ProductVariantAttributeUpdate")"
                insert="@Url.Action("ProductVariantAttributeInsert", new { productId = parentModel.Id })" />
    <sorting enabled="true"></sorting>
    <toolbar>
        <toolbar-group>
            <button datagrid-action="DataGridToolAction.InsertRow" type="button" class="btn btn-primary btn-flat no-anims mr-auto">
                <i class="fa fa-plus"></i>
                <span>@T("Admin.Common.AddNew")</span>
            </button>
            <button datagrid-action="DataGridToolAction.SaveChanges" type="button" class="btn btn-warning no-anims btn-flat">
                <i class="fa fa-check"></i>
                <span>@T("Admin.Common.SaveChanges")</span>
            </button>
            <button datagrid-action="DataGridToolAction.CancelEdit" type="button" class="btn btn-light btn-flat mr-auto">
                <span>@T("Common.Cancel")</span>
            </button>
        </toolbar-group>
        <toolbar-group class="omega">
            <button datagrid-action="DataGridToolAction.DeleteSelectedRows" type="button" class="btn btn-danger no-anims btn-flat">
                <i class="far fa-trash-alt"></i>
                <span>@T("Admin.Common.Delete.Selected")</span>
            </button>
        </toolbar-group>
    </toolbar>
    <columns>
        <column for="ProductAttribute" hideable="false" width="4fr" />
        <column for="AttributeControlType" width="2fr" />
        <column for="TextPrompt" halign="center" width="2fr" />
        <column for="CustomData" halign="center" width="2fr" />
        <column for="IsRequired" halign="center" width="1fr" />
        <column for="DisplayOrder1" halign="center" width="1fr" />
        <column for="EditUrl" halign="center" width="1fr" x-readonly="true" title="">    
            <display-template>
                <a :href="item.row.EditUrl">
                    {{ item.row.EditText }}
                </a>
                <div :id="'OptionsSetsContainer' + item.row.Id" style='display:none'>
                    <select class='form-control' :id="'OptionsSetsChoice' + item.row.Id" :data-valcount='item.row.ValueCount' v-html="item.row.OptionsSets">
                        {{ item.row.OptionsSets }}
                        @*<option v-for="xxx in item.row.OptionsSets" v-bind:value="xxx.key">{{ xxx.value }}</option>*@
                    </select>
                </div>
            </display-template>
        </column>
    </columns>
</datagrid>

