@model ProductOverviewModel

@{ 
    var displayProductPictures = GetMetadata<bool>("DisplayProductPictures");
    var isSingleStoreMode = GetMetadata<bool>("IsSingleStoreMode");
    var gridPageSize = GetMetadata<int>("GridPageSize");
}

<datagrid id="products-grid"
          allow-resize="true" 
          allow-row-selection="true" 
          allow-edit="true"
          preserve-grid-state="true"
          allow-column-reordering="true">
    <datasource read="@Url.Action("ProductList")" delete="@Url.Action("ProductDelete")" update="@Url.Action("ProductUpdate")" insert="@Url.Action("ProductInsert")" />
    <paging position="Bottom" page-size="@gridPageSize" page-index="1" show-size-chooser="true" />
    <sorting allow-unsort="true" allow-multisort="false"></sorting>
    <toolbar>
        @*<a v-if="!grid.editing.active" asp-action="Create" class="btn btn-primary btn-flat mr-auto">
            <i class="fa fa-plus"></i>
            <span>@T("Admin.Common.AddNew")...</span>
        </a>*@
        <button datagrid-action="DataGridToolAction.InsertRow" class="btn btn-primary btn-flat mr-auto">
            <i class="fa fa-plus"></i>
            <span>@T("Admin.Common.AddNew")...</span>
        </button>

        <button datagrid-action="DataGridToolAction.SaveChanges" type="button" class="btn btn-warning btn-flat">
            <i class="fa fa-check"></i>
            <span>@T("Admin.Common.SaveChanges")</span>
        </button>
        <button datagrid-action="DataGridToolAction.CancelEdit" type="button" class="btn btn-secondary btn-flat mr-auto">
            <span>@T("Common.Cancel")</span>
        </button>

        <button datagrid-action="DataGridToolAction.DeleteSelectedRows" type="button" class="btn btn-danger btn-flat">
            <i class="far fa-trash-alt"></i>
            <span>@T("Admin.Common.Delete.Selected")</span>
        </button>
        <button datagrid-action="DataGridToolAction.ReactToSelection" type="button" class="btn btn-secondary btn-flat">
            <i class="far fa-upload"></i>
            <span>Exportieren</span>
        </button>
    </toolbar>
    <columns>
        @if (displayProductPictures)
        {
            <column for="PictureThumbnailUrl"
                    title=""
                    width="48px"
                    sortable="false"
                    visible="true"
                    readonly="true"
                    resizable="false"
                    reorderable="false">
                <display-template>
                    <!-- TODO: (core) zoomable-thumb won't work in our new data grid. Fix it. -->
                    <div v-if="item.row.Id > 0" class="x-zoomable-thumb-container d-flex align-items-center justify-content-center" style="position: absolute; width: 100%; height: 100%; padding: 8px; left: 0; top: 0;">
                        <img :alt="item.row.Id" :src="item.value" style="max-width: 42px; max-height: 32px" :class="{ 'x-zoomable-thumb': !item.row.NoThumb }" />
                    </div>
                </display-template>
            </column>
        }
        <column for="Name" width="3fr" hideable="false">
            <display-template>
                <span class="mr-1 badge" v-bind:class="'badge-' + item.row.ProductTypeLabelHint">{{ item.row.ProductTypeName }}</span>
                <a :href="item.row.EditUrl" class="text-truncate">
                    {{ item.value }}
                </a>
            </display-template>
        </column>
        <column for="Sku" />
        <column for="Gtin" visible="false" />
        <column for="ManufacturerPartNumber" visible="false" />
        <column for="Price" halign="flex-end" />
        <column for="OldPrice" halign="flex-end" visible="false" />
        <column for="StockQuantity" halign="center" />
        <column for="MinStockQuantity" halign="center" visible="false" />
        <column for="LimitedToStores" visible="!isSingleStoreMode" readonly="true" halign="center" />
        <column for="CreatedOn" entity-member="CreatedOnUtc" readonly="true" visible="false" />
        <column for="UpdatedOn" entity-member="UpdatedOnUtc" readonly="true" />
        <column for="Published" halign="center" />
        <column for="AvailableStartDateTimeUtc" visible="false" />
        <column for="AvailableEndDateTimeUtc" visible="false" />
    </columns>
</datagrid>

<script sm-target-zone="scripts" data-origin="products-grid">
    // ...
</script>