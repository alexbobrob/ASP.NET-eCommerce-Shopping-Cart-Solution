@model ProductAttributeOptionsSetModel

@{
    var parentModel = ViewData["Parent"] as ProductAttributeModel;

    const string strRoot = "Admin.Catalog.Products.ProductVariantAttributes.Attributes.Values.Fields.";
    var nameStr = T(strRoot + "Name");
    var aliasStr = T(strRoot + "Alias");
    var priceAdjustmentStr = T(strRoot + "PriceAdjustment");
    var weightAdjustmentStr = T(strRoot + "WeightAdjustment");
    var isPreSelectedStr = T(strRoot + "IsPreSelected");
    var displayOrderStr = T("Common.DisplayOrder");
}

<datagrid id="product-attribute-optionsset-grid"
          allow-resize="true"
          preserve-grid-state="true" preserve-command-state="true"
          allow-column-reordering="true">
    <datasource read="@Url.Action("ProductAttributeOptionsSetList", new { productAttributeId = parentModel.Id })"
                insert="@Url.Action("ProductAttributeOptionsSetInsert", new { productAttributeId = parentModel.Id })"
                update="@Url.Action("ProductAttributeOptionsSetUpdate")"
                delete="@Url.Action("ProductAttributeOptionsSetDelete")" />
    <paging position="Bottom" show-size-chooser="true" />
    <sorting allow-unsort="true" allow-multisort="false">
        <sort by="Name" />
    </sorting>
    <toolbar>
        <toolbar-group>
            <button datagrid-action="DataGridToolAction.InsertRow" type="button" class="btn btn-primary btn-flat no-anims mr-auto">
                <i class="fa fa-plus"></i>
                <span>@T("Admin.Common.AddNew")</span>
            </button>
            <button datagrid-action="DataGridToolAction.SaveChanges" type="button" class="btn btn-warning no-anims btn-flat">
                <i class="fa fa-check"></i>
                <span>@T("Admin.Common.SaveChanges")</span>
            </button>
            <button datagrid-action="DataGridToolAction.CancelEdit" type="button" class="btn btn-light btn-flat mr-auto">
                <span>@T("Common.Cancel")</span>
            </button>
        </toolbar-group>
        <toolbar-group class="omega">
            <button datagrid-action="DataGridToolAction.DeleteSelectedRows" type="button" class="btn btn-danger no-anims btn-flat">
                <i class="far fa-trash-alt"></i>
                <span>@T("Admin.Common.Delete.Selected")</span>
            </button>
        </toolbar-group>
    </toolbar>
    <row-commands>
        <a datarow-action="DataRowAction.InlineEdit">@T("Common.Edit")</a>
        <a datarow-action="DataRowAction.Delete">@T("Common.Delete")</a>
    </row-commands>
    <columns>
        <column for="Id" halign="center" visible="false" readonly="true" />
        <column for="Name" hideable="false" width="2fr" />
    </columns>
    <detail-view>
        <div class="datagrid-root">
            <sm-datagrid 
                :options="{ keyMemberName: 'Id', vborders: true, hover: true, striped: true }" 
                :data-source="{ read: '@Url.Action("ProductAttributeOptionsList")?optionsSetId=' + item.row.Id }"@*TODO: (mg) (core) Find the set ID somehow.*@
                :columns="[ 
                    { member: 'Name', name: 'Name', visible: true, title: '@nameStr' }, @*TODO: (mg) (core) Use template somehow.*@
                    { member: 'Alias', name: 'Alias', visible: true, title: '@aliasStr' },
                    { member: 'PriceAdjustmentString', name: 'PriceAdjustmentString', visible: true, halign: 'center', title: '@priceAdjustmentStr' },
                    { member: 'WeightAdjustmentString', name: 'WeightAdjustmentString', visible: true, halign: 'center', title: '@weightAdjustmentStr' },
                    { member: 'IsPreSelected', name: 'IsPreSelected', visible: true, halign: 'center', type: 'boolean', title: '@isPreSelectedStr' },
                    { member: 'DisplayOrder', name: 'DisplayOrder', visible: true, halign: 'center', type: 'int', title: '@displayOrderStr' },
                ]" 
                :paging="{ enabled: true, pageSize: 15, pageIndex: 1 }" 
                :sorting="{ enabled: true, descriptors: [] }">
                <template v-slot:toolbar="grid">
                    <div class="dg-toolbar d-flex flex-nowrap">
                        <div class="dg-toolbar-group">
                            <button type="button" class="btn btn-primary btn-sm btn-flat no-anims mr-auto insert-option" href="#" v-if="!grid.editing.active" v-on:click.prevent="grid.insertRow">
                                <i class="fa fa-plus"></i>
                                <span>@T("Admin.Common.AddNew")</span>
                            </button>
                        </div>
                    </div>
                </template>
            </sm-datagrid>
        </div>
    </detail-view>
</datagrid>

<input type="button" id="btnRefreshOptions" name="btnRefreshOptions" value="" class="d-none" />

<script sm-target-zone="scripts" data-origin="product-attribute-edit">
    $(function() {
        $(document).on('click', '.add-product-attribute-option', function (e) {
            e.preventDefault();
            //var id = $(this).closest('.t-grid').attr('id').replace('productattributeoptions-grid', '');
            var optionsSetId = 0; //TODO: get id
            $('#btnRefreshOptions').val(optionsSetId);
            var url = '@Url.Content("~/Admin/ProductAttribute/ProductAttributeOptionCreatePopup/")' + optionsSetId + '?btnId=btnRefreshOptions&formId=product-attribute-form';
            openPopup(url, true);
            return false;
        });

        $(document).on('click', '.edit-product-attribute-option', function (e) {
            e.preventDefault();
            var id = $(this).data("id");
            $('#btnRefreshOptions').val(id);
            var url = '@Url.Content("~/Admin/ProductAttribute/ProductAttributeOptionEditPopup/")' + id + '?btnId=btnRefreshOptions&formId=product-attribute-form';
            openPopup(url, true);
            return false;
        });

        // Refresh grid after popup edit dialog was closed.
        $(document).on('click', '#btnRefreshOptions', function () {
            window["product-attribute-options-grid" + $(this).val()].$children[0].read();
            return false;
        });
    });
</script>
