@using Microsoft.AspNetCore.Mvc.Controllers
@using Smartstore.Engine.Modularity

@inject IModuleCatalog ModuleCatalog

@{
    Layout = "_AdminLayout";

    var module = ModuleCatalog.GetModuleByAssembly((ViewContext.ActionDescriptor as ControllerActionDescriptor).ControllerTypeInfo.Assembly);

    // TODO: (core) Localized Friendly Name
    // TODO: (core) Display module icon
    // TODO: (core) Determine "BackToList" url by module type
    var systemName = module?.SystemName;
    var friendlyName = module?.FriendlyName;

    ViewBag.Title = T("Admin.Common.Configure").Value + " - " + friendlyName;
}

<div class="section-header">
    <div class="title" title="@ViewBag.Title (@systemName)">
        @*<img src="@Url.Content(Model.IconUrl)" alt="@Model.FriendlyName" />*@
        @ViewBag.Title
        <a href='@Url.Action("List")'>(@T("Admin.Common.BackToList"))</a>
    </div>
    <div class="options">
        <zone name="admin_button_toolbar_before" />
        <a class="update-string-resources btn btn-secondary" href='@Url.Action("UpdateStringResources", "Module")' data-system-name="@systemName">
            <i class="fa fa-sync-alt"></i>
            <span>@T("Admin.Configuration.Plugins.Resources.Update")</span>
        </a>
        <zone name="admin_button_toolbar_after" />
    </div>
</div>

<div class="plugin-config-container">
    @RenderBody()
</div>

<script sm-target-zone="scripts" data-origin="ConfigureModule">
	$(function () {
		var token = $('input[name="__RequestVerificationToken"]').val();

        $('.section-header .options').on('click', '[type=submit]', function (e) {
            // On SubmitButtonClick, post the form programmatically, as the button is not a child of the form...
            var form = $('.plugin-config-container form').first();
            if (form) {
                // ...but first add a hidden input to the form with button's name and value to mimic button click WITHIN the form.
                var btn = $(e.currentTarget);
                form.prepend($('<input type="hidden" name="' + btn.attr('name') + '" value="' + btn.attr('value') + '" />'));
                form.submit();
            }
        });

		$(".update-string-resources").on("click", function (e) {
            e.preventDefault();

            var $el = $(this);

            $({}).ajax({
			    type: 'POST',
			    url: $el.attr("href"),
                data: {
                    "__RequestVerificationToken": token,
                    "systemName": $el.attr("data-system-name")
                },
				success: function (data) {
					displayNotification(data.Message, data.Success ? "success" : "error");
				}
            });

			return false;
        })
    });
</script>
