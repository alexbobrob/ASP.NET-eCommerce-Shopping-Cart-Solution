@model ThemeListModel

<fieldset>
    <legend class="mb-3">@T("Admin.Configuration.Themes.AvailableDesktopThemes")</legend>

    <div id="theme-list" class="row sm-gutters">
        @foreach (var theme in Model.Themes)
        {
            var isActive = theme.IsActive;
            var isBroken = theme.State != ThemeManifestState.Active;

            <div class="col-auto" style="width: 280px">

                <div class="card shadow-sm theme-item@(isActive ? " active" : "")@(isBroken ? " broken" : "")" attr-title='(theme.Description.HasValue(), theme.Description)'>
                    <div class="card-img-top theme-thumbnail" style="background-image: url('@Url.Content(theme.PreviewImageUrl)')"></div>

                    <div class="card-body p-3">
                        <h4 class="h5 text-truncate">
                            @(theme.Title ?? theme.Name)
                            @if (theme.BaseTheme.HasValue())
                            {
                                <small class="fs-sm text-muted" title='@T("Admin.Configuration.Themes.IsBasedOn"): @theme.BaseTheme'>
                                    <i class="fa fa-@(isBroken ? "unlink" : "link") fa-flip-horizontal"></i>
                                    @theme.BaseTheme
                                </small>
                            }
                        </h4>
                        <div class="theme-info fs-xs text-truncate">
                            @if (theme.Author.HasValue())
                            {
                                <span>@T("Admin.Configuration.Themes.Author"): </span><span class="text-muted">@theme.Author, </span>
                            }
                            <span>@T("Admin.Configuration.Themes.Version"): </span><span class="text-muted">@theme.Version</span>
                        </div>
                        <div class="theme-buttons d-flex mt-3">
                            @if (!theme.IsActive)
                            {
                                <a href="#" class="btn btn-primary btn-sm set-as-defaulttheme@(isBroken ? " invisible" : "")" data-name="@theme.Name">
                                    @T("Admin.Common.Activate")
                                </a>
                            }
                            else
                            {
                                <a href="#" class="btn btn-secondary btn-sm disabled">
                                    <i class="fa fa-check"></i>
                                    @T("Common.Active")
                                </a>
                            }

                            @if (!isBroken)
                            {
                                <div class="btn-group ml-auto">
                                    <a class="btn btn-outline-secondary btn-sm tooltip-toggle" href='@Url.Action("Preview", "Theme", new { theme = theme.Name, storeId = Model.StoreId })' title="@T("Admin.Configuration.Themes.Preview")">
                                        <i class="far fa-fw fa-eye"></i>
                                    </a>
                                    @if (theme.IsConfigurable)
                                    {
                                        <a class="btn btn-outline-secondary btn-sm tooltip-toggle" href='@Url.Action("Configure", "Theme", new { theme = theme.Name, storeId = Model.StoreId })' title="@T("Admin.Common.Configure")">
                                            <i class="fa fa-fw fa-paint-brush"></i>
                                        </a>
                                    }
                                </div>
                            }

                        </div>
                    </div>

                    @if (isBroken)
                    {
                        <div class="theme-broken-badge" title='@T("Admin.Configuration.Themes.MissingBaseTheme", theme.BaseTheme).Value'>
                            <i class="fa fa-exclamation"></i>
                        </div>
                    }
                </div>
            </div>
        }
    </div>
</fieldset>
