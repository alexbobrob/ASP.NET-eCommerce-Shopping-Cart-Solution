@model IRuleExpression

@{
    @* TODO: (mg) (core) Try to delegate to Html.Editor(..., "Decimal") instead of reinventing the wheel. *@
    var metadata = Model.Descriptor.Metadata;
    var id = "rule-value-" + Model.Id;
    var min = metadata.Get("min") as decimal?;
    var max = metadata.Get("max") as decimal?;
    var step = metadata.Get("step") as decimal?;
    var postfix = metadata.Get("postfix") as string;

    var value = Model.Value != null
        ? Convert.ToDecimal(Model.Value, System.Globalization.CultureInfo.InvariantCulture)
        : decimal.Zero;

@*    var htmlAttributes = new Dictionary<string, object>();
    if (value.HasValue)
    {
        htmlAttributes["value"] = value.Value;
    }

    var targetMetadata = new EmptyModelMetadataProvider();  // immutable

    var dic = new ViewDataDictionary(targetMetadata, new ModelStateDictionary())
    {
		{ "htmlAttributes", htmlAttributes },
    };*@
}
@*@Html.Editor(id, "Decimal", id, dic)*@
<div class="numerictextbox-group flex-grow-1">
    <input id="@id" name="@id" 
           value="@value"
           class="form-control"
           placeholder="@T("Common.EnterValue").Value"
           min="@min"
           max="@max"
           step="@(step ?? 1)"
           onchange="Smartstore.Admin.Rules.onRuleValueChanged()" />
    <span sm-if="postfix.HasValue()" class="numerictextbox-postfix">@postfix</span>
</div>