@using Smartstore.Web.Models.Catalog

@model ProductDetailsModel

@{
    // TODO: (mh) (core) Fire event. But why don't we fire the event more generically in Taghelper?
    //EngineContext.Current.Resolve<IEventPublisher>().Publish(new TabStripCreated(x, "product-detail", this.Html, this.Model));

    // TODO: (mh) (core) Viewcomponent or Partial?
    //var specificationAttributes = Html.Action("ProductSpecifications", new { productId = Model.Id }).ToString();
    var specificationAttributes = string.Empty;
}

<tabstrip id="pd-tabs" class="pd-tabs" sm-nav-style="Material" sm-nav-position="Top" sm-hide-single-item="true" sm-fade="true" sm-responsive="true">
    <tab-content-header>
        <a href="javascript:void()" class="btn btn-secondary btn-flat btn-no-border offcanvas-closer rounded-0" title="@T("Common.Close")">
            <i class="fa fa-chevron-left"></i>
            <span>@T("Common.Close")</span>
        </a>
    </tab-content-header>
    @if (Model.FullDescription.Value.HasValue())
    {
        var summary = Model.FullDescription.Value.RemoveHtml().Truncate(300, "...");
        <tab sm-title="@T("Products.Details")" sm-visible="true" sm-summary="@summary" sm-selected="true">
            <div sm-language-attributes-for="Model.FullDescription" itemprop="description" class="long-text html-editor-content">
                <collapsed-content>
                    @Html.Raw(Model.FullDescription)
                </collapsed-content>
            </div>
        </tab>
    }

    <tab sm-if="specificationAttributes.HasValue()" sm-title="@T("Products.Specs")" sm-selected="!Model.FullDescription.HasValue()">
        @*TODO: (mh) (core) Viewcomponent or Partial? *@ 
    </tab>
    
    <tab sm-if="Model.DisplayProductReviews" sm-title="@T("Reviews")" sm-selected="!Model.FullDescription.HasValue() && !specificationAttributes.HasValue()">
        @*TODO: (mh) (core) Viewcomponent or Partial? *@ 
    </tab>
</tabstrip>


    