@functions{
    private double? Value
    {
        get
        {
            double? value = null;
            if (ViewData.Model != null)
            {
                value = Convert.ToDouble(ViewData.Model, System.Globalization.CultureInfo.InvariantCulture);
            }
            return value;
        }
    }

    private string CssClass
    {
        get
        {
            var cls = "numerictextbox-group flex-grow-1";

            if (TryGetMetadata<string>("size", out var size))
            {
                cls += " numerictextbox-group-" + size;
            }

            return cls;
        }
    }
}

<div class="@CssClass">
    @*TODO: (mh) (core) Reimplement with taghelper once available *@
    @*@(Html.Telerik().NumericTextBox<double>()
                .Name(ViewData.TemplateInfo.GetFullHtmlFieldName(string.Empty))
                .EmptyMessage(GetMetadata<string>("placeholder") ?? T("Common.EnterValue"))
                .ButtonTitleUp(T("Common.IncreaseValue"))
                .ButtonTitleDown(T("Common.DecreaseValue"))
                .Value(Value)
                .MinValue(GetMetadata<double?>("min"))
                .MaxValue(GetMetadata<double?>("max"))
                .IncrementStep(GetMetadata<double?>("step") ?? 1)
                .DecimalDigits(4)   //always display 4 digits
        )*@

    <input asp-for="@Model"
           id="@Html.IdForModel()"
           name="@Html.NameForModel()"
           value="@Value"
           type="number"
           class="form-control "
           placeholder="@(GetMetadata<string>("placeholder") ?? T("Common.EnterValue").Value)"
           min="@(GetMetadata<double?>("min"))"
           max="@(GetMetadata<double?>("max"))"
           step="@(GetMetadata<double?>("step") ?? 1)" />

    @if (TryGetMetadata<string>("postfix", out var postfix))
    {
        <span class="numerictextbox-postfix">@postfix</span>
    }
</div>

