@using Microsoft.AspNetCore.Routing
@using Smartstore.Utilities

@functions{
    private int? Value
    {
        get
        {
            int? value = null;
            if (ViewData.Model != null)
            {
                value = Convert.ToInt32(ViewData.Model, System.Globalization.CultureInfo.InvariantCulture);
            }
            else
            {
                var htmlAttributes = new RouteValueDictionary(ViewData["htmlAttributes"] ?? new object());
                if (htmlAttributes.TryGetValue("value", out var rawValue))
                {
                    value = Convert.ToInt32(rawValue, System.Globalization.CultureInfo.InvariantCulture);
                }
            }

            return value;
        }
    }

    private string CssClass
    {
        get
        {
            var cls = "numberinput-group flex-grow-1";

            if (TryGetMetadata<string>("size", out var size))
            {
                cls += " numberinput-group-" + size;
            }

            return cls;
        }
    }
}

@{
    var attributes = new AttributeDictionary().Merge(CommonHelper.ObjectToDictionary(ViewData["htmlAttributes"] ?? new object()));
}

<div class="@CssClass">
    @*TODO: (mh) (core) Reimplement with taghelper once available *@
    @*@(Html.Telerik().IntegerTextBox()
                .Name(ViewData.TemplateInfo.GetFullHtmlFieldName(string.Empty))
                .EmptyMessage(GetMetadata<string>("placeholder") ?? T("Common.EnterValue"))
                .ButtonTitleUp(T("Common.IncreaseValue"))
                .ButtonTitleDown(T("Common.DecreaseValue"))
                .MinValue(GetMetadata<int?>("min"))
                .MaxValue(GetMetadata<int?>("max"))
                .IncrementStep(GetMetadata<int?>("step") ?? 1)
                .Value(Value)
        )*@

    <input asp-for="@Model"
           value="@Value"
           class="form-control"
           type="number"
           attrs="attributes"
           placeholder="@(GetMetadata<string>("placeholder") ?? T("Common.EnterValue").Value)"
           min="@(GetMetadata<int?>("min"))"
           max="@(GetMetadata<int?>("max"))"
           step="@(GetMetadata<int?>("step") ?? 1)" />

    @if (TryGetMetadata<string>("postfix", out var postfix))
    {
        <span class="numerictextbox-postfix">@postfix</span>
    }
</div>