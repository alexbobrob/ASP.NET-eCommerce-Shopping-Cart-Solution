@model ForumSearchResultModel

@{
    var hits = Model.PagedList;
    var textQueried = Model.SearchResult.Engine != null && Model.Query.Fields != null && Model.Query.Fields.Contains("text");
}

@foreach (PublicForumTopicModel topic in hits)
{
    <li class="list-group-item">
        <div data-id="@topic.Id" class="topic row flex-nowrap align-items-center sm-gutters" attr-class='(!topic.Published, "disabled")'>

            <div class="col topic-info text-truncate">
                <div class="d-flex flex-nowrap align-items-center">
                    <div class="topic-avatar mr-3">
                        <partial name="Customer.Avatar" model="topic.Avatar" />
                    </div>
                    <div class="topic-name">
                        <div class="topic-subject text-truncate">
                            <span sm-if="topic.ForumTopicType == ForumTopicType.Sticky" class="topic-type">
                                <label class="badge badge-success">@T("Forum.Sticky")</label>
                            </span>
                            <span sm-if="topic.ForumTopicType == ForumTopicType.Announcement" class="topic-type">
                                <label class="badge badge-info">@T("Forum.Announcement")</label>
                            </span>
                            <a asp-route="ForumTopicBySlug" asp-route-id="@topic.Id" asp-route-slug="@topic.Slug" class="forum-link fwm fs-h6 text-truncate">
                                @Html.Raw(Model.Highlight(topic.Subject, "subject", Model.Query, null, "<mark>", "</mark>"))
                            </a>
                        </div>
                        <div sm-if="topic.CustomerId > 0" class="topic-author text-truncate text-muted small">
                            <span>@T("Forum.Author"):</span>
                            @if (topic.HasCustomerProfile)
                            {
                                <a asp-route="CustomerProfile" asp-route-id="@topic.CustomerId" class="forum-link">
                                    @topic.CustomerName.NaIfEmpty()
                                </a>
                            }
                            else
                            {
                                <span>@topic.CustomerName</span>
                            }
                        </div>
                        <div sm-if="topic.FirstPostId != 0 && textQueried" class="queried-text text-truncate">
                            @Html.Raw(Model.SearchResult.Engine.Highlight(topic.FirstPostId, "text", "<mark>", "</mark>", 3))
                        </div>
                        <div sm-if="topic.PostsPages.TotalPages > 1">
                            <forumtopic-pagination class="topics-pager"
                                sm-list-items="topic.PostsPages"
                                sm-topic-id="topic.Id"
                                sm-topic-slug="@topic.Slug"
                                sm-show-previous="false"
                                sm-show-next="false"
                                sm-item-title-format-string="@T("Forum.Topics.GotoPostPager")"
                                sm-alignment="Left"
                                sm-size="Mini" />                                            
                        </div>
                    </div>
                </div>
            </div>

            <div class="col topic-replies text-center text-truncate">
                <div class="text-muted small">@T("Forum.Replies")</div>
                <div class="fs-h5 fwm">@topic.NumReplies.ToString("N0")</div>
            </div>

            <div class="col topic-views text-center text-truncate">
                <div class="text-muted small">@T("Forum.Views")</div>
                <div class="fs-h5 fwm">@topic.Views.ToString("N0")</div>
            </div>

            <div class="col topic-lastpost text-truncate">
                <partial name="_LastPost" model="topic.LastPost" />
            </div>

        </div>
    </li>
}

@if (Model.TotalCount == 0 || !hits.HasNextPage)
{
    <p sm-if="hits.TotalPages > 1" class="text-muted">
        @T("Search.NoMoreHitsFound")
    </p>
}
else if (Model.Error.HasValue())
{
    <p>
        <div class="alert alert-danger">@Model.Error</div>
    </p>
}
else
{
    <div class="load-more" data-page="@(hits.PageIndex + 2)"></div>
}
