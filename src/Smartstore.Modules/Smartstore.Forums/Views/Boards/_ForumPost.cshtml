@model PublicForumPostModel

@{
    var postLinkRouteName = Model.CurrentTopicPage == 1 ? "ForumTopicBySlug" : "ForumTopicBySlugPaged";
    var postLinkRouteValues = Model.CurrentTopicPage == 1
        ? (object)(new { id = Model.ForumTopicId, slug = Model.ForumTopicSlug })
        : (object)(new { id = Model.ForumTopicId, slug = Model.ForumTopicSlug, page = Model.CurrentTopicPage });
}

@Html.Raw($"<a name='{Model.Id}'></a>")

<div class="container forum-post card mb-4" id="post@(Model.Id)" data-id="@Model.Id">
    <div class="row" attr-class='(!Model.Published, "disabled")'>
        <div class="post-info col-12 col-md-3 col-lg-2 p-3">
            <div class="user-info text-center">
                <div class="avatar">
                    <partial name="Customer.Avatar" model="Model.Avatar" />
                </div>
                <div sm-if="Model.CustomerId > 0" class="mt-3">
                    @if (Model.HasCustomerProfile)
                    {
                        <a asp-route="CustomerProfile" asp-route-id="@Model.CustomerId" class="username forum-link">
                            @Model.CustomerName.NaIfEmpty()
                        </a>
                    }
                    else
                    {
                        <span class="username">@Model.CustomerName</span>
                    }
                </div>

                @if (Model.CanCreatePrivateMessages)
                {
                    <a asp-action="Send" asp-controller="PrivateMessages" asp-route-id="@Model.CustomerId" class="btn btn-outline-info btn-flat button-pm mt-2 btn-sm" rel="nofollow">
                        <i class="fa fa-user"></i>
                        <span>@T("Forum.PrivateMessages.PM")</span>
                    </a>
                }

                <div class="user-stats mt-2 small">
                    <div sm-if="Model.IsForumModerator" class="status">
                        <span class="pr-1">@T("Forum.Status"):</span>
                        <span class="stat-value">@T("Forum.Moderator")</span>
                    </div>
                    <div sm-if="Model.ShowCustomersPostCount" class="totalposts">
                        <span class="pr-1">@T("Forum.TotalPosts"):</span>
                        <span class="stat-value">@Model.ForumPostCount.ToString("N0")</span>
                    </div>
                    <div sm-if="Model.ShowCustomersJoinDate && !Model.IsGuest" class="joined">
                        <span class="pr-1">@T("Forum.Joined"):</span>
                        <span class="stat-value">@Model.CustomerJoinDate.ToNativeString("d")</span>
                    </div>
                    <div sm-if="Model.ShowCustomersLocation && !Model.IsGuest && Model.CustomerLocation.HasValue()" class="location">
                        <span class="pr-1">@T("Forum.Location"):</span>
                        <span class="stat-value">@Model.CustomerLocation</span>
                    </div>
                </div>
            </div>
        </div>
        <div class="post-content col-12 col-md-9 col-lg-10 p-3">
            <div class="d-flex flex-column h-100">
                <div>
                    <div class="row">
                        <div class="post-stats text-muted small mb-3 col">
                            <span class="posttime">
                                <span>@T("Forum.Posted"):</span>
                                <span class="stat-value">@Model.PostCreatedOnStr</span>
                            </span>
                            <span class="votes" attr-class='(Model.VoteCount == 0, "hide")' title="@T("Common.Liked")">
                                <span class="pl-1 pr-1">&middot;</span>
                                <span><i class="fa fa-thumbs-up"></i></span>
                                <span class="vote-count stat-value">@Model.VoteCount.ToString("N0")</span>
                            </span>
                        </div>
                        <div class="col col-sm-auto text-right">
                            <a href="@(Url.RouteUrl(postLinkRouteName, postLinkRouteValues))#@Model.Id" class="post-link forum-link ml-auto" title="@T("Forum.PostLinkTitle")">#@Model.Id</a>
                        </div>
                    </div>
                    <div class="post-body">
                        <div class="posttext" dir="auto">
                            @Html.Raw(HtmlUtility.SanitizeHtml(Model.FormattedText))
                        </div>
                        <input type="hidden" asp-for="Id" />
                    </div>
                    <div sm-if="Model.SignaturesEnabled && Model.FormattedSignature.HasValue()" class="signature text-muted text-center pt-6" dir="auto">
                        @Html.Raw(Model.FormattedSignature)
                    </div>
                </div>
                @if (Model.CanEditPost || Model.CanDeletePost || Model.CanCreatePosts || Model.CanVote)
                {
                    <div class="text-right mt-auto">
                        <div class="functions">
                            <hr />
                            @if (Model.CanEditPost)
                            {
                                <a asp-action="PostEdit" asp-controller="Boards" asp-route-id="@Model.Id" class="btn btn-secondary btn-flat btn-sm">
                                    <i class="far fa-edit"></i>
                                    <span>@T("Forum.EditPost")</span>
                                </a>
                            }
                            @if (Model.CanCreatePosts)
                            {
                                <a asp-action="PostCreate" asp-route-id="@Model.ForumTopicId" asp-route-quote="@Model.Id" class="btn btn-secondary btn-flat btn-sm">
                                    <i class="fa fa-quote-left"></i>
                                    <span>@T("Forum.QuotePost")</span>
                                </a>
                            }
                            @if (Model.CanVote)
                            {
                                <button type="button" class="btn btn-secondary btn-flat btn-sm post-vote post-vote-up" attr-class='(Model.Vote, "hide")' value="true">
                                    <i class="fa fa-thumbs-up"></i>
                                    <span>@T("Common.LikeIt")</span>
                                </button>
                                <button type="button" class="btn btn-secondary btn-flat btn-sm post-vote post-vote-down" attr-class='(!Model.Vote, "hide")' value="false">
                                    <i class="fa fa-thumbs-down"></i>
                                    <span>@T("Common.DoNotLikeIt")</span>
                                </button>
                            }
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>